#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define SENSOR D5

 char auth[] = "X1U4a3fbSC8dMiA2da3jOTpYG8R1z_xV"; // ใส่รหัส Token ที่คัดลอกมา
 char ssid[] = "Naris"; // ใส่ชื่อไวไฟที่บอร์ดจะใช้เชื่อมต่อ
 char pass[] = "narissara"; // ใส่รหัสผ่านไวไฟ

 long currentMillis = 0;
 long previousMillis = 0;
 int interval = 1000;
 boolean ledState = LOW;
 float calibrationFactor = 4.5;
 volatile byte pulseCount;
 byte pulse1Sec = 0;
 float flowRate;
 unsigned int flowMilliLitres;
 unsigned long totalMilliLitres;
 void IRAM_ATTR pulseCounter()
 {
 pulseCount++;
 }
void setup()
 {
 Serial.begin(115200);
 Blynk.begin(auth, ssid, pass);
 pinMode(SENSOR, INPUT_PULLUP);
pulseCount = 0;
 flowRate = 0.0;
 flowMilliLitres = 0;
 totalMilliLitres = 0;
 previousMillis = 0;
 attachInterrupt(digitalPinToInterrupt(SENSOR), pulseCounter, FALLING);
 }
 void loop()
 {
 currentMillis = millis();
 if (currentMillis - previousMillis > interval) {
 pulse1Sec = pulseCount;
 pulseCount = 0;
 flowRate = ((1000.0 / (millis() - previousMillis)) * pulse1Sec) /
calibrationFactor;
 previousMillis = millis();
 flowMilliLitres = (flowRate / 60) * 1000;
 totalMilliLitres += flowMilliLitres;
 Serial.print("Flow rate: ");
 Serial.print(int(flowRate));
 Serial.print("L/min");
 Serial.print("\t");
 Serial.print("Output Liquid Quantity: ");
 Serial.print(totalMilliLitres);
 Serial.print("mL / ");
 Serial.print(totalMilliLitres / 1000);
 Serial.println("L");
 Blynk.virtualWrite(V2, flowRate);
 Blynk.run();
 }
 }
